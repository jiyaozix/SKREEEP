-- Remove existing GUI if it exists
for i, v in pairs(game.CoreGui:GetChildren()) do
    if v.Name == "WhisperSpy" then
        v:Destroy()
    end
end

local ScreenGui = Instance.new("ScreenGui")
local Scroll = Instance.new("ScrollingFrame")
local frameDrag = Instance.new("Frame")

ScreenGui.Name = "WhisperSpy"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Scroll.Name = "Scroll"
Scroll.Parent = ScreenGui
Scroll.BackgroundColor3 = Color3.new(0.337255, 0.337255, 0.337255)
Scroll.BackgroundTransparency = 0.89999997615814
Scroll.Position = UDim2.new(0.0159817338, 0, 0.631728053, 0)
Scroll.Size = UDim2.new(0, 405, 0, 222)
Scroll.CanvasPosition = Vector2.new(0, 484)
Scroll.CanvasSize = UDim2.new(0, 0, 1, 0)
Scroll.ScrollBarThickness = 10

-- Create draggable frame for the GUI
frameDrag.Name = "FrameDrag"
frameDrag.Parent = ScreenGui
frameDrag.Size = UDim2.new(1, 0, 0, 25) -- Top bar for dragging
frameDrag.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
frameDrag.Position = UDim2.new(0, 0, 0, 0)
frameDrag.Draggable = true
frameDrag.Active = true
frameDrag.Text = "Drag Me" -- Optional text for the draggable area

local dragStart
local startPos
frameDrag.MouseButton1Down:Connect(function(input)
    dragStart = input.Position
    startPos = ScreenGui.Position
end)

frameDrag.MouseMoved:Connect(function(input)
    if dragStart then
        local delta = input.Position - dragStart
        ScreenGui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Output message function
function output(plr, msg)
    local colour = Color3.fromRGB(255, 255, 255)
    local labels = Scroll:GetChildren()

    -- Check for different command types (whisper changes color)
    if string.sub(msg, 1, 2) == "+e" or string.sub(msg, 1, 2) == "+w" or string.sub(msg, 1, 2) == "+t" or string.sub(msg, 1, 8) == "+console" or string.sub(msg, 1, 5) == "+team" then
        colour = Color3.fromRGB(255, 255, 0) -- yellow for normal commands
    elseif string.sub(msg, 1, 8) == "+whisper" then
        colour = Color3.fromRGB(0, 255, 255) -- change color for whisper (cyan)
    else
        colour = Color3.fromRGB(255, 255, 255) -- default white for regular chat
    end

    -- Create new label for the message
    local o = Instance.new("TextLabel", Scroll)
    o.Name = "text" .. math.random(1, 1000)
    o.Text = plr.Name .. ": " .. msg
    o.Size = UDim2.new(0.95, 0, .02, 0)
    o.Position = UDim2.new(0, 0, 0.02 + prevOutputPos, 0)
    o.Font = Enum.Font.SourceSansBold
    o.TextColor3 = colour
    o.TextStrokeTransparency = 0
    o.BackgroundTransparency = 1
    o.BackgroundColor3 = Color3.new(0, 0, 0)
    o.BorderSizePixel = 0
    o.BorderColor3 = Color3.new(0, 0, 0)
    o.FontSize = "Size14"
    o.TextXAlignment = Enum.TextXAlignment.Left
    o.ClipsDescendants = true
    prevOutputPos = prevOutputPos + 0.025

    -- Auto-scroll to the bottom every time a message is added
    Scroll.CanvasPosition = Vector2.new(0, Scroll.CanvasSize.Y.Offset)
end

-- Listen to player's chat messages
for i, v in pairs(game.Players:GetChildren()) do
    v.Chatted:Connect(function(msg)
        output(v, msg)
    end)
end

-- New player joined
game.Players.ChildAdded:Connect(function(plr)
    if plr:IsA("Player") then
        plr.Chatted:Connect(function(msg)
            output(plr, msg)
        end)
    end
end)

-- Listen for +clear command
game.Players.LocalPlayer.Chatted:Connect(function(msg)
    if msg == "+clear" then
        for i, v in pairs(Scroll:GetChildren()) do
            if v:IsA("TextLabel") then
                prevOutputPos = 0
                v:Destroy()
            end
        end
    end
end)
